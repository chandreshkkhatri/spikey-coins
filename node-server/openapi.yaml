openapi: 3.0.3
info:
  title: Spikey Coins Proxy Server API
  description: |
    A comprehensive proxy server for cryptocurrency data that tunnels requests to bypass CORS issues.

    This API provides real-time cryptocurrency ticker data, candlestick charts, and market cap information
    sourced from Binance WebSocket streams and CoinGecko REST API.

    ## Features
    - Real-time 24hr ticker data with short-term price changes (1h, 4h, 8h, 12h)
    - Historical candlestick data (15-minute intervals)
    - Market cap data from CoinGecko
    - Rate limiting protection
    - CORS enabled for frontend integration

    ## Data Sources
    - **Binance WebSocket**: Real-time ticker and candlestick data
    - **CoinGecko API**: Market cap and additional coin information

    ## Rate Limiting
    The server implements rate limiting to respect external API limits:
    - Maximum 50 requests per minute to protect against rate limit violations
    - Automatic backoff and retry mechanisms
  version: 1.0.0
  contact:
    name: Spikey Coins Team
  license:
    name: ISC
servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://your-production-domain.com
    description: Production server (replace with actual domain)

paths:
  /:
    get:
      summary: Health Check
      description: Returns server status and basic information
      tags:
        - Health
      responses:
        "200":
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Spikey Coins Proxy Server"
                  description:
                    type: string
                    example: "Real-time cryptocurrency data proxy server"
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-30T10:30:00.000Z"

  /api/ticker:
    get:
      summary: Ticker Router Health Check
      description: Returns ticker router status and statistics
      tags:
        - Health
        - Ticker
      responses:
        "200":
          description: Ticker router status
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ticker router is running"
                  status:
                    type: string
                    example: "healthy"
                  tickerDataCount:
                    type: integer
                    description: Number of ticker symbols being tracked
                    example: 1500
                  candlestickSymbols:
                    type: integer
                    description: Number of symbols with candlestick data
                    example: 8
                  rateLimiting:
                    type: object
                    properties:
                      requestsInCurrentWindow:
                        type: integer
                        description: Number of requests made in current window
                        example: 15
                      maxRequestsPerWindow:
                        type: integer
                        description: Maximum requests allowed per window
                        example: 50
                      windowResetTime:
                        type: string
                        format: date-time
                        description: When the current rate limit window resets
                        example: "2025-05-30T10:31:00.000Z"

  /api/ticker/24hr:
    get:
      summary: Get 24-Hour Ticker Data
      description: |
        Returns comprehensive 24-hour ticker statistics for all tracked cryptocurrency pairs.

        Each ticker includes:
        - Real-time price data
        - 24-hour price change and volume
        - Short-term price changes (1h, 4h, 8h, 12h) calculated from 15-minute candlestick data
        - Market cap data (where available)

        The data is continuously updated via Binance WebSocket streams.
      tags:
        - Ticker
      responses:
        "200":
          description: Successful response with ticker data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TickerData"
                  count:
                    type: integer
                    description: Number of ticker symbols returned
                    example: 1500
                  candlestickSymbols:
                    type: integer
                    description: Number of symbols with candlestick data available
                    example: 8
                  timestamp:
                    type: string
                    format: date-time
                    description: When the data was retrieved
                    example: "2025-05-30T10:30:00.000Z"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/ticker/symbol/{symbol}:
    get:
      summary: Get Individual Ticker Data
      description: |
        Returns ticker data for a specific cryptocurrency symbol.
        
        This endpoint provides detailed information for a single symbol including:
        - Current price and 24-hour changes
        - Volume and price change information
        - Calculated metrics like volume USD and range positioning
      tags:
        - Ticker
      parameters:
        - name: symbol
          in: path
          required: true
          description: The cryptocurrency symbol (e.g., BTCUSDT, ETHUSDT)
          schema:
            type: string
            example: "BTCUSDT"
      responses:
        "200":
          description: Successful response with ticker data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/TickerData"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-30T10:30:00.000Z"
        "400":
          description: Bad request - Symbol parameter missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Symbol parameter is required"
        "404":
          description: Symbol not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "No ticker data available for UNKNOWN"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/ticker/candlestick:
    get:
      summary: Get Candlestick Summary
      description: |
        Returns a summary of all available candlestick data symbols.

        This endpoint provides an overview of which cryptocurrency pairs have candlestick data available,
        along with the number of candles and the latest timestamp for each symbol.
      tags:
        - Candlestick
      responses:
        "200":
          description: Successful response with candlestick summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  symbols:
                    type: array
                    items:
                      type: string
                    description: List of symbols with candlestick data
                    example: ["BTCUSDT", "ETHUSDT", "BNBUSDT"]
                  summary:
                    type: array
                    items:
                      type: object
                      properties:
                        symbol:
                          type: string
                          example: "BTCUSDT"
                        candleCount:
                          type: integer
                          description: Number of candlesticks available
                          example: 48
                        latestTime:
                          type: integer
                          format: int64
                          description: Timestamp of the latest candlestick (Unix timestamp)
                          example: 1717062000000
                  count:
                    type: integer
                    description: Number of symbols with candlestick data
                    example: 8
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-30T10:30:00.000Z"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/ticker/candlestick/{symbol}:
    get:
      summary: Get Candlestick Data for Symbol
      description: |
        Returns detailed candlestick data for a specific cryptocurrency symbol.

        The data includes:
        - Multiple interval options: 1m, 5m, 15m, 30m, 1h
        - Variable candle counts: 1m (60 candles), 5m (144 candles), 15m (48 candles), 30m (48 candles), 1h (24 candles)
        - OHLCV (Open, High, Low, Close, Volume) data
        - Timestamps for each candlestick

        This data is used for calculating short-term price changes and can be used for charting.
      tags:
        - Candlestick
      parameters:
        - name: symbol
          in: path
          required: true
          description: The cryptocurrency symbol (e.g., BTCUSDT, ETHUSDT)
          schema:
            type: string
            example: "BTCUSDT"
        - name: interval
          in: query
          required: false
          description: The candlestick interval
          schema:
            type: string
            enum: ["1m", "5m", "15m", "30m", "1h"]
            default: "15m"
            example: "1h"
      responses:
        "200":
          description: Successful response with candlestick data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  symbol:
                    type: string
                    example: "BTCUSDT"
                  interval:
                    type: string
                    example: "1h"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CandlestickData"
                  count:
                    type: integer
                    description: Number of candlesticks returned
                    example: 48
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-30T10:30:00.000Z"
        "404":
          description: Symbol not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "No candlestick data available for UNKNOWN"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/ticker/marketCap:
    get:
      summary: Get Market Cap Data
      description: |
        Fetches current market capitalization data from CoinGecko API.

        This endpoint returns comprehensive market data including:
        - Current price in USD
        - Market capitalization
        - 24-hour trading volume
        - Price changes over various timeframes
        - Market cap ranking

        **Note**: Requires COINGECKO_API_KEY environment variable to be configured.
      tags:
        - Market Data
      responses:
        "200":
          description: Successful response with market cap data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/MarketCapData"
                  count:
                    type: integer
                    description: Number of coins returned
                    example: 100
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-30T10:30:00.000Z"
        "400":
          description: Bad request - No coin IDs available
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "No coin IDs available for market cap lookup"
        "500":
          description: Internal server error or missing API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "CoinGecko API key is not configured"

  /api/ticker/refreshMarketcapData:
    get:
      summary: Refresh Market Cap Data
      description: |
        Placeholder endpoint for refreshing market cap data.

        **Note**: This feature is not yet implemented. Currently returns a message 
        indicating the feature is under development.
      tags:
        - Market Data
      responses:
        "200":
          description: Feature not implemented response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Market cap data refresh feature is not yet implemented"

  /api/ticker/storage-stats:
    get:
      summary: Get Storage Statistics
      description: |
        Returns detailed storage statistics and metadata about the server's data storage.
        
        This endpoint provides information about:
        - Storage type (in-memory vs persistent)
        - Data counts and memory usage
        - Storage metadata and configuration
        - Candlestick and ticker symbol counts
      tags:
        - System
      responses:
        "200":
          description: Successful response with storage statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  storage:
                    type: object
                    properties:
                      metadata:
                        type: object
                        properties:
                          type:
                            type: string
                            example: "in-memory"
                          persistent:
                            type: boolean
                            example: false
                          note:
                            type: string
                            example: "Data is stored in memory only and will be lost on restart"
                      filesCount:
                        type: integer
                        example: 0
                      totalSizeBytes:
                        type: integer
                        example: 2500000
                      totalSizeMB:
                        type: number
                        format: float
                        example: 2.38
                  inMemory:
                    type: object
                    properties:
                      tickerSymbols:
                        type: integer
                        example: 400
                      candlestickSymbols:
                        type: integer
                        example: 8
                      totalCandles:
                        type: integer
                        example: 2400
                      intervalStats:
                        type: object
                        example: {"1m": {"symbols": 8, "candles": 480}, "5m": {"symbols": 8, "candles": 1152}}
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-30T10:30:00.000Z"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/ticker/discovery-stats:
    get:
      summary: Get Symbol Discovery Statistics
      description: |
        Returns statistics about the symbol discovery process and rankings.
        
        This endpoint provides information about:
        - Total discovered symbols
        - Symbol rankings by volume
        - Volume thresholds and settings
        - Discovery process metadata
      tags:
        - System
      responses:
        "200":
          description: Successful response with discovery statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  discovery:
                    type: object
                    properties:
                      totalSymbols:
                        type: integer
                        example: 408
                      lastUpdate:
                        type: integer
                        format: int64
                        example: 1725925800000
                      topSymbols:
                        type: array
                        items:
                          type: string
                        example: ["ETHUSDT", "BTCUSDT", "USDCUSDT", "SOLUSDT", "XRPUSDT"]
                      avgVolume:
                        type: integer
                        example: 15000000
                      minVolumeThreshold:
                        type: integer
                        example: 1000
                      symbolExpiryTime:
                        type: integer
                        example: 1800000
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-30T10:30:00.000Z"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    TickerData:
      type: object
      description: |
        24-hour ticker statistics for a cryptocurrency pair with backend-calculated metrics.

        **Backend Processing**: All calculations are performed server-side for optimal performance.
        This includes volume conversions, percentage calculations, and range positioning.
      properties:
        # Original Binance WebSocket fields (maintained for backward compatibility)
        s:
          type: string
          description: Symbol
          example: "BTCUSDT"
        c:
          type: string
          description: Close price (last price) - original Binance field
          example: "67234.56"
        o:
          type: string
          description: Open price - original Binance field
          example: "66789.12"
        h:
          type: string
          description: High price - original Binance field
          example: "68000.00"
        l:
          type: string
          description: Low price - original Binance field
          example: "66500.00"
        v:
          type: string
          description: Total traded base asset volume - original Binance field
          example: "12345.67890000"
        q:
          type: string
          description: Total traded quote asset volume - original Binance field
          example: "830123456.78900000"
        P:
          type: string
          description: Price change percent - original Binance field
          example: "0.67"
        p:
          type: string
          description: Price change - original Binance field
          example: "445.44"
        C:
          type: integer
          format: int64
          description: Statistics close time - original Binance field
          example: 1717062899999
        O:
          type: integer
          format: int64
          description: Statistics open time - original Binance field
          example: 1716976500000

        # Backend-calculated short-term changes (from candlestick data)
        change_1h:
          type: number
          format: float
          description: Price change percentage over 1 hour (calculated from 5m candlesticks)
          example: 1.23
          nullable: true
        change_4h:
          type: number
          format: float
          description: Price change percentage over 4 hours (calculated from 30m candlesticks)
          example: -2.34
          nullable: true
        change_8h:
          type: number
          format: float
          description: Price change percentage over 8 hours (calculated from 30m candlesticks)
          example: 3.45
          nullable: true
        change_12h:
          type: number
          format: float
          description: Price change percentage over 12 hours (calculated from 1h candlesticks)
          example: -1.67
          nullable: true

        # Backend-calculated additional metrics
        price:
          type: number
          format: float
          description: Current price as number (converted from string for easier frontend usage)
          example: 67234.56
        change_24h:
          type: number
          format: float
          description: 24-hour price change percentage as number (converted from string)
          example: 0.67
        high_24h:
          type: number
          format: float
          description: 24-hour high price as number (converted from string)
          example: 68000.00
        low_24h:
          type: number
          format: float
          description: 24-hour low price as number (converted from string)
          example: 66500.00
        volume_base:
          type: number
          format: float
          description: Base asset volume as number (converted from string)
          example: 12345.68
        volume_usd:
          type: number
          format: float
          description: Volume in USD (calculated as volume_base * current_price)
          example: 830123456.78
        range_position_24h:
          type: number
          format: float
          description: |
            Position within 24h price range as percentage (0-100).
            Shows where current price sits between low (0%) and high (100%).
          example: 75.5
          minimum: 0
          maximum: 100
          nullable: true
        normalized_volume_score:
          type: number
          format: float
          description: |
            Volume significance score relative to market cap.
            Calculated as (volume_usd * 100000) / market_cap / 100.
            Higher values indicate more significant trading activity.
          example: 1.25
          nullable: true

        # Market cap data (from CoinMarketCap integration)
        market_cap:
          type: number
          format: float
          description: Market capitalization (if available from coin data)
          example: 1234567890123.45
          nullable: true

    CandlestickData:
      type: object
      description: Candlestick data for a specific time interval
      properties:
        symbol:
          type: string
          description: Symbol name
          example: "BTCUSDT"
        openTime:
          type: integer
          format: int64
          description: Kline open time (Unix timestamp)
          example: 1717061100000
        closeTime:
          type: integer
          format: int64
          description: Kline close time (Unix timestamp)
          example: 1717061999999
        open:
          type: string
          description: Open price
          example: "67000.00"
        high:
          type: string
          description: High price
          example: "67250.00"
        low:
          type: string
          description: Low price
          example: "66950.00"
        close:
          type: string
          description: Close price
          example: "67150.00"
        volume:
          type: string
          description: Volume
          example: "123.45678900"
        interval:
          type: string
          description: Kline interval
          example: "15m"

    MarketCapData:
      type: object
      description: Market capitalization data from CoinGecko
      properties:
        id:
          type: string
          description: CoinGecko coin ID
          example: "bitcoin"
        symbol:
          type: string
          description: Coin symbol
          example: "btc"
        name:
          type: string
          description: Coin name
          example: "Bitcoin"
        image:
          type: string
          description: Coin image URL
          example: "https://assets.coingecko.com/coins/images/1/large/bitcoin.png"
        current_price:
          type: number
          format: float
          description: Current price in USD
          example: 67234.56
        market_cap:
          type: number
          format: float
          description: Market capitalization
          example: 1234567890123.45
        market_cap_rank:
          type: integer
          description: Market cap ranking
          example: 1
        fully_diluted_valuation:
          type: number
          format: float
          description: Fully diluted valuation
          example: 1345678901234.56
          nullable: true
        total_volume:
          type: number
          format: float
          description: 24h trading volume
          example: 12345678901.23
        high_24h:
          type: number
          format: float
          description: 24h high price
          example: 68000.00
        low_24h:
          type: number
          format: float
          description: 24h low price
          example: 66500.00
        price_change_24h:
          type: number
          format: float
          description: 24h price change
          example: 445.44
        price_change_percentage_24h:
          type: number
          format: float
          description: 24h price change percentage
          example: 0.67
        market_cap_change_24h:
          type: number
          format: float
          description: 24h market cap change
          example: 8765432109.87
        market_cap_change_percentage_24h:
          type: number
          format: float
          description: 24h market cap change percentage
          example: 0.71
        circulating_supply:
          type: number
          format: float
          description: Circulating supply
          example: 19765432.1
        total_supply:
          type: number
          format: float
          description: Total supply
          example: 21000000.0
          nullable: true
        max_supply:
          type: number
          format: float
          description: Maximum supply
          example: 21000000.0
          nullable: true
        ath:
          type: number
          format: float
          description: All-time high price
          example: 73750.07
        ath_change_percentage:
          type: number
          format: float
          description: Change from all-time high (percentage)
          example: -8.84
        ath_date:
          type: string
          format: date-time
          description: All-time high date
          example: "2024-03-14T07:10:36.635Z"
        atl:
          type: number
          format: float
          description: All-time low price
          example: 67.81
        atl_change_percentage:
          type: number
          format: float
          description: Change from all-time low (percentage)
          example: 99145.67
        atl_date:
          type: string
          format: date-time
          description: All-time low date
          example: "2013-07-06T00:00:00.000Z"
        last_updated:
          type: string
          format: date-time
          description: Last updated timestamp
          example: "2025-05-30T10:29:45.123Z"

    ErrorResponse:
      type: object
      description: Standard error response
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message
          example: "Failed to retrieve data"

tags:
  - name: Health
    description: Health check and status endpoints
  - name: Ticker
    description: Real-time cryptocurrency ticker data
  - name: Candlestick
    description: Historical candlestick chart data
  - name: Market Data
    description: Market capitalization and additional market information
  - name: System
    description: System statistics and monitoring endpoints

externalDocs:
  description: GitHub Repository
  url: https://github.com/your-username/spikey-coins
